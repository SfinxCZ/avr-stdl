#include <avr/io.h>
#include "lcd.h"

void port_init(void) {
	DDRA = 0x00;
	PORTA = 0x00;
	DDRB = 0x00;
	PORTB = 0x00;
	DDRC = 0xFF;
	PORTC = 0x00;
	DDRD = 0xF0;
	PORTD = 0x00;
}

//call this routine to initialize all peripherals
void init_devices(void) {
	CLI(); //disable all interrupts
	port_init();
	LCD_init();

	MCUCR = 0x00;
	GICR = 0x00;
	TIMSK = 0x00; //timer interrupt sources
}

//******************* MAIN FUNCTION *******************
void main(void) {
	unsigned char PB_Status = 0xff, Change_Display = 0, Change_Display1 = 1;

	init_devices();

	while (1) {
		if (Change_Display != Change_Display1) {
			if (Change_Display == 0) {
				LCD_DisplayString_F(1, 1, " Hi, Welcome! ");
				LCD_DisplayString_F(2, 1, "Have a nice Day");
			} else {
				LCD_DisplayString_F(1, 1, " ATmega32 Board ");
				LCD_DisplayString_F(2, 1, " Starter's Kit ");
			}

			Change_Display1 = Change_Display;
		}

		CHECK_PB: while (pushButton1_OPEN)
			; // wait here until push button1 is //pressed
		delay_ms(20); // 20ms delay for key debouncing
// after key-pressed
		if (pushButton1_OPEN)
			goto CHECK_PB;
		while (pushButton1_PRESSED)
			; //wait here till the
//pushbutton1 is kept pressed
		delay_ms(50); // 50ms delay for key debouncing after
// key released

		Change_Display = ~Change_Display;

	}

}
