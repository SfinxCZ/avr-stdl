//-------------------------------------------------------- Start
#include<avr/io.h>
#include<util/delay.h>

#define DPORT PORTB //Define Data port
#define DPDDR DDRB

#define CPORT PORTD //Define Signals port
#define CPDDR DDRD

#define RS PD6 //Signal Pins, Reset
#define EN PD7 //Signal Pins, Enable

#define LCDClear   0x01 //Clears LCD Display
#define LCD8bit   0x38 //Sets up LCD in 8bit mode
#define LCDCursorOn 0x0f //Enables Cursor
#define LCDSeek00   0x80 //Seeks the pointer to the begeining

void LCD(char ch);
void LCDcmd(void);
void LCDInitialize(void);
void printStringLCD(char *str);
int  printIntLCD(unsigned int i);

int main()
{ DPDDR=0xff;
 CPDDR=0xf0;

 _delay_ms(500);
 LCDInitialize();
 printStringLCD("Circuits Today");
 _delay_ms(5000);
 LCDcmd(LCDClear);
 prinStringLCD(“Print an Integer”);
 LCDcmd(0xc0);
 printIntLCD(990);
 return 0;
}

void LCD(char ch)
{ DPORT=ch; //Put values to ports
 CPORT=(1<<RS)|(1<<EN); //Signaling to send data
 _delay_us(10);
 CPORT=(1<<RS)|(0<<EN);
 _delay_us(45);
}

void LCDcmd(unsigned char ch)
{ DPORT=ch;
 CPORT=(0<<RS)|(1<<EN); //Signaling to send commands
 _delay_us(10);
 CPORT=(0<<RS)|(0<<EN);
 _delay_us(45);
 if(ch==0x01||ch==0x02)
 _delay_ms(2);

}

void LCDInitialize(void)
{ LCDcmd(LCD8bit);
 LCDcmd(LCDCursorOn);
 LCDcmd(LCDClear);
 LCDcmd(LCDSeek00);
}

void printStringLCD(char *str)
{ int i=0;
 while(str[i]!='\0')
 { DPORT=str[i]; //Put values to ports
 LCD(ch);
 i++;
  }
}
int  printIntLCD(unsigned int i)
{ static int a;
 a=0;
 if(i!=0)
 { printIntLCD(i/10);
 LCD(‘0’+i%10);
 a++;
 }
 return a;
}
//-------------------------------------------------------- End
